#!/bin/sh
#
# $NetBSD: named,v 1.14 2004/08/13 18:08:03 mycroft Exp $
#

# PROVIDE: named
# REQUIRE: SERVERS
# BEFORE:  DAEMON
# KEYWORD: chrootdir

$_rc_subr_loaded . /etc/rc.subr

name="named"
rcvar=$name
command="/usr/sbin/${name}"
pidfile="/var/run/${name}.pid"
start_precmd="named_precmd"
extra_commands="reload"
required_dirs="$named_chrootdir"	# if it is set, it must exist

named_precmd()
{
	if [ -z "$named_chrootdir" ]; then
		return 0;
	fi

	# If running in a chroot cage, ensure that the appropriate files
	# exist inside the cage, as well as helper symlinks into the cage 
	# from outside.
	#
	# As this is called after the is_running and required_dir checks
	# are made in run_rc_command(), we can safely assume ${named_chrootdir}
	# exists and named isn't running at this point (unless forcestart
	# is used).
	#
	case "$($command -v)" in
	BIND*)	# 9 no group, named-xfer, or ndc
		;;
	named*)	# 4 and 8
		rc_flags="-g named $rc_flags"
		if [ ! -x "${named_chrootdir}/usr/libexec/named-xfer" -o \
		    "${named_chrootdir}/usr/libexec/named-xfer" -ot \
		    /usr/libexec/named-xfer ]; then
			rm -f "${named_chrootdir}/usr/libexec/named-xfer"
			cp -p /usr/libexec/named-xfer \
			    "${named_chrootdir}/usr/libexec"
		fi
		ln -fs "${named_chrootdir}/var/run/ndc" /var/run/ndc
		;;
	esac

	for i in null random
	do
		if [ ! -c "${named_chrootdir}/dev/$i" ]; then
			rm -f "${named_chrootdir}/dev/$i"
			(cd /dev && 
			    /bin/pax -rw -pe "$i" "${named_chrootdir}/dev")
		fi
	done

	if [ -f /etc/localtime ]; then
		cmp -s /etc/localtime "${named_chrootdir}/etc/localtime" || \
		    cp -p /etc/localtime "${named_chrootdir}/etc/localtime"
	fi
	ln -fs "${named_chrootdir}/var/run/named.pid" /var/run/named.pid

	#	Change run_rc_commands()'s internal copy of $named_flags
	#
	rc_flags="-u named -t ${named_chrootdir} $rc_flags"
}

load_rc_config $name
run_rc_command "$1"
